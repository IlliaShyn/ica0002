- name: Grafana directories
  ansible.builtin.file:
    name: /opt/grafana/provisioning/{{ item }}
    state: directory
  loop:
    - dashboards
    - datasources

- name: run grafana template
  ansible.builtin.template:
    src: grafana.ini.j2
    dest: /opt/grafana/grafana.ini
    mode: '0644'
  no_log: true
  notify: Restart grafana

- name: Datasource for grafana
  ansible.builtin.template:
    src: datasources.yaml
    dest: /opt/grafana/provisioning/datasources/default.yaml
    mode: '0644'
  notify: Restart grafana

- name: Dashboards provider for grafana
  ansible.builtin.template:
    src: dashboards.yaml
    dest: /opt/grafana/provisioning/dashboards/default.yaml
    mode: '0644'
  notify: Restart grafana

- name: Dashboards for grafana
  ansible.builtin.copy:
    dest: /opt/grafana/provisioning/dashboards/{{ item }}
    src: "{{ item }}"
    mode: '0644'
  loop: 
    - main.json
    - backups.json
    - syslog.json
    - mysql.json
  notify: Restart grafana

- name: Grafana container
  community.docker.docker_container:
    name: grafana
    image: grafana/grafana
    published_ports: "{{ grafana_port }}:3000"
    volumes: /opt/grafana:/etc/grafana
    restart_policy: always

- name: Grafana CNAME record
  community.general.nsupdate:
    key_name: "nsupdate.key" 
    key_secret: "{{ dns_update_key }}" 
    zone: "{{ startup_name }}"
    record: "grafana"
    value: "{{ inventory_hostname }}"
    type: "CNAME"
    key_algorithm: "hmac-sha256"
    server: "{{ hostvars[groups['dns_primary'][0]]['ansible_default_ipv4']['address'] }}"
  no_log: true

